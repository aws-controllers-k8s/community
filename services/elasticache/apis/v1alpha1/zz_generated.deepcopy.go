// +build !ignore_autogenerated

// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1alpha1 "github.com/aws/aws-controllers-k8s/apis/core/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZone) DeepCopyInto(out *AvailabilityZone) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZone.
func (in *AvailabilityZone) DeepCopy() *AvailabilityZone {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheCluster) DeepCopyInto(out *CacheCluster) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.AtRestEncryptionEnabled != nil {
		in, out := &in.AtRestEncryptionEnabled, &out.AtRestEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthTokenEnabled != nil {
		in, out := &in.AuthTokenEnabled, &out.AuthTokenEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthTokenLastModifiedDate != nil {
		in, out := &in.AuthTokenLastModifiedDate, &out.AuthTokenLastModifiedDate
		*out = (*in).DeepCopy()
	}
	if in.AutoMinorVersionUpgrade != nil {
		in, out := &in.AutoMinorVersionUpgrade, &out.AutoMinorVersionUpgrade
		*out = new(bool)
		**out = **in
	}
	if in.CacheClusterCreateTime != nil {
		in, out := &in.CacheClusterCreateTime, &out.CacheClusterCreateTime
		*out = (*in).DeepCopy()
	}
	if in.CacheClusterID != nil {
		in, out := &in.CacheClusterID, &out.CacheClusterID
		*out = new(string)
		**out = **in
	}
	if in.CacheClusterStatus != nil {
		in, out := &in.CacheClusterStatus, &out.CacheClusterStatus
		*out = new(string)
		**out = **in
	}
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.CacheSubnetGroupName != nil {
		in, out := &in.CacheSubnetGroupName, &out.CacheSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.ClientDownloadLandingPage != nil {
		in, out := &in.ClientDownloadLandingPage, &out.ClientDownloadLandingPage
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationEndpoint != nil {
		in, out := &in.ConfigurationEndpoint, &out.ConfigurationEndpoint
		*out = new(Endpoint)
		(*in).DeepCopyInto(*out)
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.NumCacheNodes != nil {
		in, out := &in.NumCacheNodes, &out.NumCacheNodes
		*out = new(int64)
		**out = **in
	}
	if in.PreferredAvailabilityZone != nil {
		in, out := &in.PreferredAvailabilityZone, &out.PreferredAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.PreferredMaintenanceWindow != nil {
		in, out := &in.PreferredMaintenanceWindow, &out.PreferredMaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotRetentionLimit != nil {
		in, out := &in.SnapshotRetentionLimit, &out.SnapshotRetentionLimit
		*out = new(int64)
		**out = **in
	}
	if in.SnapshotWindow != nil {
		in, out := &in.SnapshotWindow, &out.SnapshotWindow
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryptionEnabled != nil {
		in, out := &in.TransitEncryptionEnabled, &out.TransitEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheCluster.
func (in *CacheCluster) DeepCopy() *CacheCluster {
	if in == nil {
		return nil
	}
	out := new(CacheCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheEngineVersion) DeepCopyInto(out *CacheEngineVersion) {
	*out = *in
	if in.CacheEngineDescription != nil {
		in, out := &in.CacheEngineDescription, &out.CacheEngineDescription
		*out = new(string)
		**out = **in
	}
	if in.CacheEngineVersionDescription != nil {
		in, out := &in.CacheEngineVersionDescription, &out.CacheEngineVersionDescription
		*out = new(string)
		**out = **in
	}
	if in.CacheParameterGroupFamily != nil {
		in, out := &in.CacheParameterGroupFamily, &out.CacheParameterGroupFamily
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheEngineVersion.
func (in *CacheEngineVersion) DeepCopy() *CacheEngineVersion {
	if in == nil {
		return nil
	}
	out := new(CacheEngineVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNode) DeepCopyInto(out *CacheNode) {
	*out = *in
	if in.CacheNodeCreateTime != nil {
		in, out := &in.CacheNodeCreateTime, &out.CacheNodeCreateTime
		*out = (*in).DeepCopy()
	}
	if in.CacheNodeID != nil {
		in, out := &in.CacheNodeID, &out.CacheNodeID
		*out = new(string)
		**out = **in
	}
	if in.CacheNodeStatus != nil {
		in, out := &in.CacheNodeStatus, &out.CacheNodeStatus
		*out = new(string)
		**out = **in
	}
	if in.CustomerAvailabilityZone != nil {
		in, out := &in.CustomerAvailabilityZone, &out.CustomerAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(Endpoint)
		(*in).DeepCopyInto(*out)
	}
	if in.ParameterGroupStatus != nil {
		in, out := &in.ParameterGroupStatus, &out.ParameterGroupStatus
		*out = new(string)
		**out = **in
	}
	if in.SourceCacheNodeID != nil {
		in, out := &in.SourceCacheNodeID, &out.SourceCacheNodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNode.
func (in *CacheNode) DeepCopy() *CacheNode {
	if in == nil {
		return nil
	}
	out := new(CacheNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNodeTypeSpecificParameter) DeepCopyInto(out *CacheNodeTypeSpecificParameter) {
	*out = *in
	if in.AllowedValues != nil {
		in, out := &in.AllowedValues, &out.AllowedValues
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IsModifiable != nil {
		in, out := &in.IsModifiable, &out.IsModifiable
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEngineVersion != nil {
		in, out := &in.MinimumEngineVersion, &out.MinimumEngineVersion
		*out = new(string)
		**out = **in
	}
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNodeTypeSpecificParameter.
func (in *CacheNodeTypeSpecificParameter) DeepCopy() *CacheNodeTypeSpecificParameter {
	if in == nil {
		return nil
	}
	out := new(CacheNodeTypeSpecificParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNodeTypeSpecificValue) DeepCopyInto(out *CacheNodeTypeSpecificValue) {
	*out = *in
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNodeTypeSpecificValue.
func (in *CacheNodeTypeSpecificValue) DeepCopy() *CacheNodeTypeSpecificValue {
	if in == nil {
		return nil
	}
	out := new(CacheNodeTypeSpecificValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNodeUpdateStatus) DeepCopyInto(out *CacheNodeUpdateStatus) {
	*out = *in
	if in.CacheNodeID != nil {
		in, out := &in.CacheNodeID, &out.CacheNodeID
		*out = new(string)
		**out = **in
	}
	if in.NodeDeletionDate != nil {
		in, out := &in.NodeDeletionDate, &out.NodeDeletionDate
		*out = (*in).DeepCopy()
	}
	if in.NodeUpdateEndDate != nil {
		in, out := &in.NodeUpdateEndDate, &out.NodeUpdateEndDate
		*out = (*in).DeepCopy()
	}
	if in.NodeUpdateInitiatedDate != nil {
		in, out := &in.NodeUpdateInitiatedDate, &out.NodeUpdateInitiatedDate
		*out = (*in).DeepCopy()
	}
	if in.NodeUpdateStartDate != nil {
		in, out := &in.NodeUpdateStartDate, &out.NodeUpdateStartDate
		*out = (*in).DeepCopy()
	}
	if in.NodeUpdateStatusModifiedDate != nil {
		in, out := &in.NodeUpdateStatusModifiedDate, &out.NodeUpdateStatusModifiedDate
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNodeUpdateStatus.
func (in *CacheNodeUpdateStatus) DeepCopy() *CacheNodeUpdateStatus {
	if in == nil {
		return nil
	}
	out := new(CacheNodeUpdateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheParameterGroup) DeepCopyInto(out *CacheParameterGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheParameterGroup.
func (in *CacheParameterGroup) DeepCopy() *CacheParameterGroup {
	if in == nil {
		return nil
	}
	out := new(CacheParameterGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheParameterGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheParameterGroupList) DeepCopyInto(out *CacheParameterGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheParameterGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheParameterGroupList.
func (in *CacheParameterGroupList) DeepCopy() *CacheParameterGroupList {
	if in == nil {
		return nil
	}
	out := new(CacheParameterGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheParameterGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheParameterGroupSpec) DeepCopyInto(out *CacheParameterGroupSpec) {
	*out = *in
	if in.CacheParameterGroupFamily != nil {
		in, out := &in.CacheParameterGroupFamily, &out.CacheParameterGroupFamily
		*out = new(string)
		**out = **in
	}
	if in.CacheParameterGroupName != nil {
		in, out := &in.CacheParameterGroupName, &out.CacheParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ParameterNameValues != nil {
		in, out := &in.ParameterNameValues, &out.ParameterNameValues
		*out = make([]*ParameterNameValue, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ParameterNameValue)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheParameterGroupSpec.
func (in *CacheParameterGroupSpec) DeepCopy() *CacheParameterGroupSpec {
	if in == nil {
		return nil
	}
	out := new(CacheParameterGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheParameterGroupStatus) DeepCopyInto(out *CacheParameterGroupStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*Event, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Event)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.IsGlobal != nil {
		in, out := &in.IsGlobal, &out.IsGlobal
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*Parameter, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Parameter)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheParameterGroupStatus.
func (in *CacheParameterGroupStatus) DeepCopy() *CacheParameterGroupStatus {
	if in == nil {
		return nil
	}
	out := new(CacheParameterGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheParameterGroupStatus_SDK) DeepCopyInto(out *CacheParameterGroupStatus_SDK) {
	*out = *in
	if in.CacheParameterGroupName != nil {
		in, out := &in.CacheParameterGroupName, &out.CacheParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.ParameterApplyStatus != nil {
		in, out := &in.ParameterApplyStatus, &out.ParameterApplyStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheParameterGroupStatus_SDK.
func (in *CacheParameterGroupStatus_SDK) DeepCopy() *CacheParameterGroupStatus_SDK {
	if in == nil {
		return nil
	}
	out := new(CacheParameterGroupStatus_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheParameterGroup_SDK) DeepCopyInto(out *CacheParameterGroup_SDK) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.CacheParameterGroupFamily != nil {
		in, out := &in.CacheParameterGroupFamily, &out.CacheParameterGroupFamily
		*out = new(string)
		**out = **in
	}
	if in.CacheParameterGroupName != nil {
		in, out := &in.CacheParameterGroupName, &out.CacheParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IsGlobal != nil {
		in, out := &in.IsGlobal, &out.IsGlobal
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheParameterGroup_SDK.
func (in *CacheParameterGroup_SDK) DeepCopy() *CacheParameterGroup_SDK {
	if in == nil {
		return nil
	}
	out := new(CacheParameterGroup_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSecurityGroup) DeepCopyInto(out *CacheSecurityGroup) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.CacheSecurityGroupName != nil {
		in, out := &in.CacheSecurityGroupName, &out.CacheSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSecurityGroup.
func (in *CacheSecurityGroup) DeepCopy() *CacheSecurityGroup {
	if in == nil {
		return nil
	}
	out := new(CacheSecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSecurityGroupMembership) DeepCopyInto(out *CacheSecurityGroupMembership) {
	*out = *in
	if in.CacheSecurityGroupName != nil {
		in, out := &in.CacheSecurityGroupName, &out.CacheSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSecurityGroupMembership.
func (in *CacheSecurityGroupMembership) DeepCopy() *CacheSecurityGroupMembership {
	if in == nil {
		return nil
	}
	out := new(CacheSecurityGroupMembership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSubnetGroup) DeepCopyInto(out *CacheSubnetGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSubnetGroup.
func (in *CacheSubnetGroup) DeepCopy() *CacheSubnetGroup {
	if in == nil {
		return nil
	}
	out := new(CacheSubnetGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheSubnetGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSubnetGroupList) DeepCopyInto(out *CacheSubnetGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheSubnetGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSubnetGroupList.
func (in *CacheSubnetGroupList) DeepCopy() *CacheSubnetGroupList {
	if in == nil {
		return nil
	}
	out := new(CacheSubnetGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheSubnetGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSubnetGroupSpec) DeepCopyInto(out *CacheSubnetGroupSpec) {
	*out = *in
	if in.CacheSubnetGroupDescription != nil {
		in, out := &in.CacheSubnetGroupDescription, &out.CacheSubnetGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.CacheSubnetGroupName != nil {
		in, out := &in.CacheSubnetGroupName, &out.CacheSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDs != nil {
		in, out := &in.SubnetIDs, &out.SubnetIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSubnetGroupSpec.
func (in *CacheSubnetGroupSpec) DeepCopy() *CacheSubnetGroupSpec {
	if in == nil {
		return nil
	}
	out := new(CacheSubnetGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSubnetGroupStatus) DeepCopyInto(out *CacheSubnetGroupStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*Event, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Event)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*Subnet, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Subnet)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSubnetGroupStatus.
func (in *CacheSubnetGroupStatus) DeepCopy() *CacheSubnetGroupStatus {
	if in == nil {
		return nil
	}
	out := new(CacheSubnetGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSubnetGroup_SDK) DeepCopyInto(out *CacheSubnetGroup_SDK) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.CacheSubnetGroupDescription != nil {
		in, out := &in.CacheSubnetGroupDescription, &out.CacheSubnetGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.CacheSubnetGroupName != nil {
		in, out := &in.CacheSubnetGroupName, &out.CacheSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*Subnet, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Subnet)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSubnetGroup_SDK.
func (in *CacheSubnetGroup_SDK) DeepCopy() *CacheSubnetGroup_SDK {
	if in == nil {
		return nil
	}
	out := new(CacheSubnetGroup_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigureShard) DeepCopyInto(out *ConfigureShard) {
	*out = *in
	if in.NewReplicaCount != nil {
		in, out := &in.NewReplicaCount, &out.NewReplicaCount
		*out = new(int64)
		**out = **in
	}
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigureShard.
func (in *ConfigureShard) DeepCopy() *ConfigureShard {
	if in == nil {
		return nil
	}
	out := new(ConfigureShard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerNodeEndpoint) DeepCopyInto(out *CustomerNodeEndpoint) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerNodeEndpoint.
func (in *CustomerNodeEndpoint) DeepCopy() *CustomerNodeEndpoint {
	if in == nil {
		return nil
	}
	out := new(CustomerNodeEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EC2SecurityGroup) DeepCopyInto(out *EC2SecurityGroup) {
	*out = *in
	if in.EC2SecurityGroupName != nil {
		in, out := &in.EC2SecurityGroupName, &out.EC2SecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.EC2SecurityGroupOwnerID != nil {
		in, out := &in.EC2SecurityGroupOwnerID, &out.EC2SecurityGroupOwnerID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EC2SecurityGroup.
func (in *EC2SecurityGroup) DeepCopy() *EC2SecurityGroup {
	if in == nil {
		return nil
	}
	out := new(EC2SecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EngineDefaults) DeepCopyInto(out *EngineDefaults) {
	*out = *in
	if in.CacheParameterGroupFamily != nil {
		in, out := &in.CacheParameterGroupFamily, &out.CacheParameterGroupFamily
		*out = new(string)
		**out = **in
	}
	if in.Marker != nil {
		in, out := &in.Marker, &out.Marker
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EngineDefaults.
func (in *EngineDefaults) DeepCopy() *EngineDefaults {
	if in == nil {
		return nil
	}
	out := new(EngineDefaults)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Event) DeepCopyInto(out *Event) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = (*in).DeepCopy()
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.SourceIdentifier != nil {
		in, out := &in.SourceIdentifier, &out.SourceIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Event.
func (in *Event) DeepCopy() *Event {
	if in == nil {
		return nil
	}
	out := new(Event)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNodeGroup) DeepCopyInto(out *GlobalNodeGroup) {
	*out = *in
	if in.GlobalNodeGroupID != nil {
		in, out := &in.GlobalNodeGroupID, &out.GlobalNodeGroupID
		*out = new(string)
		**out = **in
	}
	if in.Slots != nil {
		in, out := &in.Slots, &out.Slots
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNodeGroup.
func (in *GlobalNodeGroup) DeepCopy() *GlobalNodeGroup {
	if in == nil {
		return nil
	}
	out := new(GlobalNodeGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalReplicationGroup) DeepCopyInto(out *GlobalReplicationGroup) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.AtRestEncryptionEnabled != nil {
		in, out := &in.AtRestEncryptionEnabled, &out.AtRestEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthTokenEnabled != nil {
		in, out := &in.AuthTokenEnabled, &out.AuthTokenEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.ClusterEnabled != nil {
		in, out := &in.ClusterEnabled, &out.ClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.GlobalReplicationGroupDescription != nil {
		in, out := &in.GlobalReplicationGroupDescription, &out.GlobalReplicationGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.GlobalReplicationGroupID != nil {
		in, out := &in.GlobalReplicationGroupID, &out.GlobalReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryptionEnabled != nil {
		in, out := &in.TransitEncryptionEnabled, &out.TransitEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalReplicationGroup.
func (in *GlobalReplicationGroup) DeepCopy() *GlobalReplicationGroup {
	if in == nil {
		return nil
	}
	out := new(GlobalReplicationGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalReplicationGroupInfo) DeepCopyInto(out *GlobalReplicationGroupInfo) {
	*out = *in
	if in.GlobalReplicationGroupID != nil {
		in, out := &in.GlobalReplicationGroupID, &out.GlobalReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.GlobalReplicationGroupMemberRole != nil {
		in, out := &in.GlobalReplicationGroupMemberRole, &out.GlobalReplicationGroupMemberRole
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalReplicationGroupInfo.
func (in *GlobalReplicationGroupInfo) DeepCopy() *GlobalReplicationGroupInfo {
	if in == nil {
		return nil
	}
	out := new(GlobalReplicationGroupInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalReplicationGroupMember) DeepCopyInto(out *GlobalReplicationGroupMember) {
	*out = *in
	if in.AutomaticFailover != nil {
		in, out := &in.AutomaticFailover, &out.AutomaticFailover
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupRegion != nil {
		in, out := &in.ReplicationGroupRegion, &out.ReplicationGroupRegion
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalReplicationGroupMember.
func (in *GlobalReplicationGroupMember) DeepCopy() *GlobalReplicationGroupMember {
	if in == nil {
		return nil
	}
	out := new(GlobalReplicationGroupMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroup) DeepCopyInto(out *NodeGroup) {
	*out = *in
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupMembers != nil {
		in, out := &in.NodeGroupMembers, &out.NodeGroupMembers
		*out = make([]*NodeGroupMember, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NodeGroupMember)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PrimaryEndpoint != nil {
		in, out := &in.PrimaryEndpoint, &out.PrimaryEndpoint
		*out = new(Endpoint)
		(*in).DeepCopyInto(*out)
	}
	if in.ReaderEndpoint != nil {
		in, out := &in.ReaderEndpoint, &out.ReaderEndpoint
		*out = new(Endpoint)
		(*in).DeepCopyInto(*out)
	}
	if in.Slots != nil {
		in, out := &in.Slots, &out.Slots
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroup.
func (in *NodeGroup) DeepCopy() *NodeGroup {
	if in == nil {
		return nil
	}
	out := new(NodeGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupConfiguration) DeepCopyInto(out *NodeGroupConfiguration) {
	*out = *in
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryAvailabilityZone != nil {
		in, out := &in.PrimaryAvailabilityZone, &out.PrimaryAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.ReplicaAvailabilityZones != nil {
		in, out := &in.ReplicaAvailabilityZones, &out.ReplicaAvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReplicaCount != nil {
		in, out := &in.ReplicaCount, &out.ReplicaCount
		*out = new(int64)
		**out = **in
	}
	if in.Slots != nil {
		in, out := &in.Slots, &out.Slots
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupConfiguration.
func (in *NodeGroupConfiguration) DeepCopy() *NodeGroupConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeGroupConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupMember) DeepCopyInto(out *NodeGroupMember) {
	*out = *in
	if in.CacheClusterID != nil {
		in, out := &in.CacheClusterID, &out.CacheClusterID
		*out = new(string)
		**out = **in
	}
	if in.CacheNodeID != nil {
		in, out := &in.CacheNodeID, &out.CacheNodeID
		*out = new(string)
		**out = **in
	}
	if in.CurrentRole != nil {
		in, out := &in.CurrentRole, &out.CurrentRole
		*out = new(string)
		**out = **in
	}
	if in.PreferredAvailabilityZone != nil {
		in, out := &in.PreferredAvailabilityZone, &out.PreferredAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.ReadEndpoint != nil {
		in, out := &in.ReadEndpoint, &out.ReadEndpoint
		*out = new(Endpoint)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupMember.
func (in *NodeGroupMember) DeepCopy() *NodeGroupMember {
	if in == nil {
		return nil
	}
	out := new(NodeGroupMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupMemberUpdateStatus) DeepCopyInto(out *NodeGroupMemberUpdateStatus) {
	*out = *in
	if in.CacheClusterID != nil {
		in, out := &in.CacheClusterID, &out.CacheClusterID
		*out = new(string)
		**out = **in
	}
	if in.CacheNodeID != nil {
		in, out := &in.CacheNodeID, &out.CacheNodeID
		*out = new(string)
		**out = **in
	}
	if in.NodeDeletionDate != nil {
		in, out := &in.NodeDeletionDate, &out.NodeDeletionDate
		*out = (*in).DeepCopy()
	}
	if in.NodeUpdateEndDate != nil {
		in, out := &in.NodeUpdateEndDate, &out.NodeUpdateEndDate
		*out = (*in).DeepCopy()
	}
	if in.NodeUpdateInitiatedDate != nil {
		in, out := &in.NodeUpdateInitiatedDate, &out.NodeUpdateInitiatedDate
		*out = (*in).DeepCopy()
	}
	if in.NodeUpdateStartDate != nil {
		in, out := &in.NodeUpdateStartDate, &out.NodeUpdateStartDate
		*out = (*in).DeepCopy()
	}
	if in.NodeUpdateStatusModifiedDate != nil {
		in, out := &in.NodeUpdateStatusModifiedDate, &out.NodeUpdateStatusModifiedDate
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupMemberUpdateStatus.
func (in *NodeGroupMemberUpdateStatus) DeepCopy() *NodeGroupMemberUpdateStatus {
	if in == nil {
		return nil
	}
	out := new(NodeGroupMemberUpdateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupUpdateStatus) DeepCopyInto(out *NodeGroupUpdateStatus) {
	*out = *in
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupUpdateStatus.
func (in *NodeGroupUpdateStatus) DeepCopy() *NodeGroupUpdateStatus {
	if in == nil {
		return nil
	}
	out := new(NodeGroupUpdateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSnapshot) DeepCopyInto(out *NodeSnapshot) {
	*out = *in
	if in.CacheClusterID != nil {
		in, out := &in.CacheClusterID, &out.CacheClusterID
		*out = new(string)
		**out = **in
	}
	if in.CacheNodeCreateTime != nil {
		in, out := &in.CacheNodeCreateTime, &out.CacheNodeCreateTime
		*out = (*in).DeepCopy()
	}
	if in.CacheNodeID != nil {
		in, out := &in.CacheNodeID, &out.CacheNodeID
		*out = new(string)
		**out = **in
	}
	if in.CacheSize != nil {
		in, out := &in.CacheSize, &out.CacheSize
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupConfiguration != nil {
		in, out := &in.NodeGroupConfiguration, &out.NodeGroupConfiguration
		*out = new(NodeGroupConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotCreateTime != nil {
		in, out := &in.SnapshotCreateTime, &out.SnapshotCreateTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSnapshot.
func (in *NodeSnapshot) DeepCopy() *NodeSnapshot {
	if in == nil {
		return nil
	}
	out := new(NodeSnapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationConfiguration) DeepCopyInto(out *NotificationConfiguration) {
	*out = *in
	if in.TopicARN != nil {
		in, out := &in.TopicARN, &out.TopicARN
		*out = new(string)
		**out = **in
	}
	if in.TopicStatus != nil {
		in, out := &in.TopicStatus, &out.TopicStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationConfiguration.
func (in *NotificationConfiguration) DeepCopy() *NotificationConfiguration {
	if in == nil {
		return nil
	}
	out := new(NotificationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parameter) DeepCopyInto(out *Parameter) {
	*out = *in
	if in.AllowedValues != nil {
		in, out := &in.AllowedValues, &out.AllowedValues
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IsModifiable != nil {
		in, out := &in.IsModifiable, &out.IsModifiable
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEngineVersion != nil {
		in, out := &in.MinimumEngineVersion, &out.MinimumEngineVersion
		*out = new(string)
		**out = **in
	}
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parameter.
func (in *Parameter) DeepCopy() *Parameter {
	if in == nil {
		return nil
	}
	out := new(Parameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterNameValue) DeepCopyInto(out *ParameterNameValue) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterNameValue.
func (in *ParameterNameValue) DeepCopy() *ParameterNameValue {
	if in == nil {
		return nil
	}
	out := new(ParameterNameValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PendingModifiedValues) DeepCopyInto(out *PendingModifiedValues) {
	*out = *in
	if in.AuthTokenStatus != nil {
		in, out := &in.AuthTokenStatus, &out.AuthTokenStatus
		*out = new(string)
		**out = **in
	}
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.NumCacheNodes != nil {
		in, out := &in.NumCacheNodes, &out.NumCacheNodes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PendingModifiedValues.
func (in *PendingModifiedValues) DeepCopy() *PendingModifiedValues {
	if in == nil {
		return nil
	}
	out := new(PendingModifiedValues)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessedUpdateAction) DeepCopyInto(out *ProcessedUpdateAction) {
	*out = *in
	if in.CacheClusterID != nil {
		in, out := &in.CacheClusterID, &out.CacheClusterID
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ServiceUpdateName != nil {
		in, out := &in.ServiceUpdateName, &out.ServiceUpdateName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessedUpdateAction.
func (in *ProcessedUpdateAction) DeepCopy() *ProcessedUpdateAction {
	if in == nil {
		return nil
	}
	out := new(ProcessedUpdateAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurringCharge) DeepCopyInto(out *RecurringCharge) {
	*out = *in
	if in.RecurringChargeAmount != nil {
		in, out := &in.RecurringChargeAmount, &out.RecurringChargeAmount
		*out = new(float64)
		**out = **in
	}
	if in.RecurringChargeFrequency != nil {
		in, out := &in.RecurringChargeFrequency, &out.RecurringChargeFrequency
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurringCharge.
func (in *RecurringCharge) DeepCopy() *RecurringCharge {
	if in == nil {
		return nil
	}
	out := new(RecurringCharge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionalConfiguration) DeepCopyInto(out *RegionalConfiguration) {
	*out = *in
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupRegion != nil {
		in, out := &in.ReplicationGroupRegion, &out.ReplicationGroupRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionalConfiguration.
func (in *RegionalConfiguration) DeepCopy() *RegionalConfiguration {
	if in == nil {
		return nil
	}
	out := new(RegionalConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationGroup) DeepCopyInto(out *ReplicationGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationGroup.
func (in *ReplicationGroup) DeepCopy() *ReplicationGroup {
	if in == nil {
		return nil
	}
	out := new(ReplicationGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReplicationGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationGroupList) DeepCopyInto(out *ReplicationGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ReplicationGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationGroupList.
func (in *ReplicationGroupList) DeepCopy() *ReplicationGroupList {
	if in == nil {
		return nil
	}
	out := new(ReplicationGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReplicationGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationGroupPendingModifiedValues) DeepCopyInto(out *ReplicationGroupPendingModifiedValues) {
	*out = *in
	if in.AuthTokenStatus != nil {
		in, out := &in.AuthTokenStatus, &out.AuthTokenStatus
		*out = new(string)
		**out = **in
	}
	if in.AutomaticFailoverStatus != nil {
		in, out := &in.AutomaticFailoverStatus, &out.AutomaticFailoverStatus
		*out = new(string)
		**out = **in
	}
	if in.PrimaryClusterID != nil {
		in, out := &in.PrimaryClusterID, &out.PrimaryClusterID
		*out = new(string)
		**out = **in
	}
	if in.Resharding != nil {
		in, out := &in.Resharding, &out.Resharding
		*out = new(ReshardingStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationGroupPendingModifiedValues.
func (in *ReplicationGroupPendingModifiedValues) DeepCopy() *ReplicationGroupPendingModifiedValues {
	if in == nil {
		return nil
	}
	out := new(ReplicationGroupPendingModifiedValues)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationGroupSpec) DeepCopyInto(out *ReplicationGroupSpec) {
	*out = *in
	if in.AtRestEncryptionEnabled != nil {
		in, out := &in.AtRestEncryptionEnabled, &out.AtRestEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthToken != nil {
		in, out := &in.AuthToken, &out.AuthToken
		*out = new(string)
		**out = **in
	}
	if in.AutoMinorVersionUpgrade != nil {
		in, out := &in.AutoMinorVersionUpgrade, &out.AutoMinorVersionUpgrade
		*out = new(bool)
		**out = **in
	}
	if in.AutomaticFailoverEnabled != nil {
		in, out := &in.AutomaticFailoverEnabled, &out.AutomaticFailoverEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.CacheParameterGroupName != nil {
		in, out := &in.CacheParameterGroupName, &out.CacheParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.CacheSecurityGroupNames != nil {
		in, out := &in.CacheSecurityGroupNames, &out.CacheSecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CacheSubnetGroupName != nil {
		in, out := &in.CacheSubnetGroupName, &out.CacheSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.GlobalReplicationGroupID != nil {
		in, out := &in.GlobalReplicationGroupID, &out.GlobalReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.MultiAZEnabled != nil {
		in, out := &in.MultiAZEnabled, &out.MultiAZEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NodeGroupConfiguration != nil {
		in, out := &in.NodeGroupConfiguration, &out.NodeGroupConfiguration
		*out = make([]*NodeGroupConfiguration, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NodeGroupConfiguration)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NotificationTopicARN != nil {
		in, out := &in.NotificationTopicARN, &out.NotificationTopicARN
		*out = new(string)
		**out = **in
	}
	if in.NumCacheClusters != nil {
		in, out := &in.NumCacheClusters, &out.NumCacheClusters
		*out = new(int64)
		**out = **in
	}
	if in.NumNodeGroups != nil {
		in, out := &in.NumNodeGroups, &out.NumNodeGroups
		*out = new(int64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.PreferredCacheClusterAZs != nil {
		in, out := &in.PreferredCacheClusterAZs, &out.PreferredCacheClusterAZs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PreferredMaintenanceWindow != nil {
		in, out := &in.PreferredMaintenanceWindow, &out.PreferredMaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.PrimaryClusterID != nil {
		in, out := &in.PrimaryClusterID, &out.PrimaryClusterID
		*out = new(string)
		**out = **in
	}
	if in.ReplicasPerNodeGroup != nil {
		in, out := &in.ReplicasPerNodeGroup, &out.ReplicasPerNodeGroup
		*out = new(int64)
		**out = **in
	}
	if in.ReplicationGroupDescription != nil {
		in, out := &in.ReplicationGroupDescription, &out.ReplicationGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDs != nil {
		in, out := &in.SecurityGroupIDs, &out.SecurityGroupIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SnapshotARNs != nil {
		in, out := &in.SnapshotARNs, &out.SnapshotARNs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SnapshotName != nil {
		in, out := &in.SnapshotName, &out.SnapshotName
		*out = new(string)
		**out = **in
	}
	if in.SnapshotRetentionLimit != nil {
		in, out := &in.SnapshotRetentionLimit, &out.SnapshotRetentionLimit
		*out = new(int64)
		**out = **in
	}
	if in.SnapshotWindow != nil {
		in, out := &in.SnapshotWindow, &out.SnapshotWindow
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TransitEncryptionEnabled != nil {
		in, out := &in.TransitEncryptionEnabled, &out.TransitEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationGroupSpec.
func (in *ReplicationGroupSpec) DeepCopy() *ReplicationGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ReplicationGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationGroupStatus) DeepCopyInto(out *ReplicationGroupStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AllowedScaleDownModifications != nil {
		in, out := &in.AllowedScaleDownModifications, &out.AllowedScaleDownModifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedScaleUpModifications != nil {
		in, out := &in.AllowedScaleUpModifications, &out.AllowedScaleUpModifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthTokenEnabled != nil {
		in, out := &in.AuthTokenEnabled, &out.AuthTokenEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthTokenLastModifiedDate != nil {
		in, out := &in.AuthTokenLastModifiedDate, &out.AuthTokenLastModifiedDate
		*out = (*in).DeepCopy()
	}
	if in.AutomaticFailover != nil {
		in, out := &in.AutomaticFailover, &out.AutomaticFailover
		*out = new(string)
		**out = **in
	}
	if in.ClusterEnabled != nil {
		in, out := &in.ClusterEnabled, &out.ClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigurationEndpoint != nil {
		in, out := &in.ConfigurationEndpoint, &out.ConfigurationEndpoint
		*out = new(Endpoint)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*Event, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Event)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.GlobalReplicationGroupInfo != nil {
		in, out := &in.GlobalReplicationGroupInfo, &out.GlobalReplicationGroupInfo
		*out = new(GlobalReplicationGroupInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.MemberClusters != nil {
		in, out := &in.MemberClusters, &out.MemberClusters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MultiAZ != nil {
		in, out := &in.MultiAZ, &out.MultiAZ
		*out = new(string)
		**out = **in
	}
	if in.NodeGroups != nil {
		in, out := &in.NodeGroups, &out.NodeGroups
		*out = make([]*NodeGroup, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NodeGroup)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PendingModifiedValues != nil {
		in, out := &in.PendingModifiedValues, &out.PendingModifiedValues
		*out = new(ReplicationGroupPendingModifiedValues)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshottingClusterID != nil {
		in, out := &in.SnapshottingClusterID, &out.SnapshottingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationGroupStatus.
func (in *ReplicationGroupStatus) DeepCopy() *ReplicationGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ReplicationGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationGroup_SDK) DeepCopyInto(out *ReplicationGroup_SDK) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.AtRestEncryptionEnabled != nil {
		in, out := &in.AtRestEncryptionEnabled, &out.AtRestEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthTokenEnabled != nil {
		in, out := &in.AuthTokenEnabled, &out.AuthTokenEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthTokenLastModifiedDate != nil {
		in, out := &in.AuthTokenLastModifiedDate, &out.AuthTokenLastModifiedDate
		*out = (*in).DeepCopy()
	}
	if in.AutomaticFailover != nil {
		in, out := &in.AutomaticFailover, &out.AutomaticFailover
		*out = new(string)
		**out = **in
	}
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.ClusterEnabled != nil {
		in, out := &in.ClusterEnabled, &out.ClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigurationEndpoint != nil {
		in, out := &in.ConfigurationEndpoint, &out.ConfigurationEndpoint
		*out = new(Endpoint)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GlobalReplicationGroupInfo != nil {
		in, out := &in.GlobalReplicationGroupInfo, &out.GlobalReplicationGroupInfo
		*out = new(GlobalReplicationGroupInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.MemberClusters != nil {
		in, out := &in.MemberClusters, &out.MemberClusters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MultiAZ != nil {
		in, out := &in.MultiAZ, &out.MultiAZ
		*out = new(string)
		**out = **in
	}
	if in.NodeGroups != nil {
		in, out := &in.NodeGroups, &out.NodeGroups
		*out = make([]*NodeGroup, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NodeGroup)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PendingModifiedValues != nil {
		in, out := &in.PendingModifiedValues, &out.PendingModifiedValues
		*out = new(ReplicationGroupPendingModifiedValues)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotRetentionLimit != nil {
		in, out := &in.SnapshotRetentionLimit, &out.SnapshotRetentionLimit
		*out = new(int64)
		**out = **in
	}
	if in.SnapshotWindow != nil {
		in, out := &in.SnapshotWindow, &out.SnapshotWindow
		*out = new(string)
		**out = **in
	}
	if in.SnapshottingClusterID != nil {
		in, out := &in.SnapshottingClusterID, &out.SnapshottingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryptionEnabled != nil {
		in, out := &in.TransitEncryptionEnabled, &out.TransitEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationGroup_SDK.
func (in *ReplicationGroup_SDK) DeepCopy() *ReplicationGroup_SDK {
	if in == nil {
		return nil
	}
	out := new(ReplicationGroup_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedCacheNode) DeepCopyInto(out *ReservedCacheNode) {
	*out = *in
	if in.CacheNodeCount != nil {
		in, out := &in.CacheNodeCount, &out.CacheNodeCount
		*out = new(int64)
		**out = **in
	}
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(int64)
		**out = **in
	}
	if in.FixedPrice != nil {
		in, out := &in.FixedPrice, &out.FixedPrice
		*out = new(float64)
		**out = **in
	}
	if in.OfferingType != nil {
		in, out := &in.OfferingType, &out.OfferingType
		*out = new(string)
		**out = **in
	}
	if in.ProductDescription != nil {
		in, out := &in.ProductDescription, &out.ProductDescription
		*out = new(string)
		**out = **in
	}
	if in.ReservationARN != nil {
		in, out := &in.ReservationARN, &out.ReservationARN
		*out = new(string)
		**out = **in
	}
	if in.ReservedCacheNodeID != nil {
		in, out := &in.ReservedCacheNodeID, &out.ReservedCacheNodeID
		*out = new(string)
		**out = **in
	}
	if in.ReservedCacheNodesOfferingID != nil {
		in, out := &in.ReservedCacheNodesOfferingID, &out.ReservedCacheNodesOfferingID
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UsagePrice != nil {
		in, out := &in.UsagePrice, &out.UsagePrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedCacheNode.
func (in *ReservedCacheNode) DeepCopy() *ReservedCacheNode {
	if in == nil {
		return nil
	}
	out := new(ReservedCacheNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedCacheNodesOffering) DeepCopyInto(out *ReservedCacheNodesOffering) {
	*out = *in
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(int64)
		**out = **in
	}
	if in.FixedPrice != nil {
		in, out := &in.FixedPrice, &out.FixedPrice
		*out = new(float64)
		**out = **in
	}
	if in.OfferingType != nil {
		in, out := &in.OfferingType, &out.OfferingType
		*out = new(string)
		**out = **in
	}
	if in.ProductDescription != nil {
		in, out := &in.ProductDescription, &out.ProductDescription
		*out = new(string)
		**out = **in
	}
	if in.ReservedCacheNodesOfferingID != nil {
		in, out := &in.ReservedCacheNodesOfferingID, &out.ReservedCacheNodesOfferingID
		*out = new(string)
		**out = **in
	}
	if in.UsagePrice != nil {
		in, out := &in.UsagePrice, &out.UsagePrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedCacheNodesOffering.
func (in *ReservedCacheNodesOffering) DeepCopy() *ReservedCacheNodesOffering {
	if in == nil {
		return nil
	}
	out := new(ReservedCacheNodesOffering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReshardingConfiguration) DeepCopyInto(out *ReshardingConfiguration) {
	*out = *in
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
	if in.PreferredAvailabilityZones != nil {
		in, out := &in.PreferredAvailabilityZones, &out.PreferredAvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReshardingConfiguration.
func (in *ReshardingConfiguration) DeepCopy() *ReshardingConfiguration {
	if in == nil {
		return nil
	}
	out := new(ReshardingConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReshardingStatus) DeepCopyInto(out *ReshardingStatus) {
	*out = *in
	if in.SlotMigration != nil {
		in, out := &in.SlotMigration, &out.SlotMigration
		*out = new(SlotMigration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReshardingStatus.
func (in *ReshardingStatus) DeepCopy() *ReshardingStatus {
	if in == nil {
		return nil
	}
	out := new(ReshardingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupMembership) DeepCopyInto(out *SecurityGroupMembership) {
	*out = *in
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupMembership.
func (in *SecurityGroupMembership) DeepCopy() *SecurityGroupMembership {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupMembership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceUpdate) DeepCopyInto(out *ServiceUpdate) {
	*out = *in
	if in.AutoUpdateAfterRecommendedApplyByDate != nil {
		in, out := &in.AutoUpdateAfterRecommendedApplyByDate, &out.AutoUpdateAfterRecommendedApplyByDate
		*out = new(bool)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.EstimatedUpdateTime != nil {
		in, out := &in.EstimatedUpdateTime, &out.EstimatedUpdateTime
		*out = new(string)
		**out = **in
	}
	if in.ServiceUpdateDescription != nil {
		in, out := &in.ServiceUpdateDescription, &out.ServiceUpdateDescription
		*out = new(string)
		**out = **in
	}
	if in.ServiceUpdateEndDate != nil {
		in, out := &in.ServiceUpdateEndDate, &out.ServiceUpdateEndDate
		*out = (*in).DeepCopy()
	}
	if in.ServiceUpdateName != nil {
		in, out := &in.ServiceUpdateName, &out.ServiceUpdateName
		*out = new(string)
		**out = **in
	}
	if in.ServiceUpdateRecommendedApplyByDate != nil {
		in, out := &in.ServiceUpdateRecommendedApplyByDate, &out.ServiceUpdateRecommendedApplyByDate
		*out = (*in).DeepCopy()
	}
	if in.ServiceUpdateReleaseDate != nil {
		in, out := &in.ServiceUpdateReleaseDate, &out.ServiceUpdateReleaseDate
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceUpdate.
func (in *ServiceUpdate) DeepCopy() *ServiceUpdate {
	if in == nil {
		return nil
	}
	out := new(ServiceUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlotMigration) DeepCopyInto(out *SlotMigration) {
	*out = *in
	if in.ProgressPercentage != nil {
		in, out := &in.ProgressPercentage, &out.ProgressPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlotMigration.
func (in *SlotMigration) DeepCopy() *SlotMigration {
	if in == nil {
		return nil
	}
	out := new(SlotMigration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Snapshot) DeepCopyInto(out *Snapshot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Snapshot.
func (in *Snapshot) DeepCopy() *Snapshot {
	if in == nil {
		return nil
	}
	out := new(Snapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Snapshot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotList) DeepCopyInto(out *SnapshotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Snapshot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotList.
func (in *SnapshotList) DeepCopy() *SnapshotList {
	if in == nil {
		return nil
	}
	out := new(SnapshotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotSpec) DeepCopyInto(out *SnapshotSpec) {
	*out = *in
	if in.CacheClusterID != nil {
		in, out := &in.CacheClusterID, &out.CacheClusterID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotName != nil {
		in, out := &in.SnapshotName, &out.SnapshotName
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotName != nil {
		in, out := &in.SourceSnapshotName, &out.SourceSnapshotName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotSpec.
func (in *SnapshotSpec) DeepCopy() *SnapshotSpec {
	if in == nil {
		return nil
	}
	out := new(SnapshotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotStatus) DeepCopyInto(out *SnapshotStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AutoMinorVersionUpgrade != nil {
		in, out := &in.AutoMinorVersionUpgrade, &out.AutoMinorVersionUpgrade
		*out = new(bool)
		**out = **in
	}
	if in.AutomaticFailover != nil {
		in, out := &in.AutomaticFailover, &out.AutomaticFailover
		*out = new(string)
		**out = **in
	}
	if in.CacheClusterCreateTime != nil {
		in, out := &in.CacheClusterCreateTime, &out.CacheClusterCreateTime
		*out = (*in).DeepCopy()
	}
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.CacheParameterGroupName != nil {
		in, out := &in.CacheParameterGroupName, &out.CacheParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.CacheSubnetGroupName != nil {
		in, out := &in.CacheSubnetGroupName, &out.CacheSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeSnapshots != nil {
		in, out := &in.NodeSnapshots, &out.NodeSnapshots
		*out = make([]*NodeSnapshot, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NodeSnapshot)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NumCacheNodes != nil {
		in, out := &in.NumCacheNodes, &out.NumCacheNodes
		*out = new(int64)
		**out = **in
	}
	if in.NumNodeGroups != nil {
		in, out := &in.NumNodeGroups, &out.NumNodeGroups
		*out = new(int64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.PreferredAvailabilityZone != nil {
		in, out := &in.PreferredAvailabilityZone, &out.PreferredAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.PreferredMaintenanceWindow != nil {
		in, out := &in.PreferredMaintenanceWindow, &out.PreferredMaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupDescription != nil {
		in, out := &in.ReplicationGroupDescription, &out.ReplicationGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.SnapshotRetentionLimit != nil {
		in, out := &in.SnapshotRetentionLimit, &out.SnapshotRetentionLimit
		*out = new(int64)
		**out = **in
	}
	if in.SnapshotSource != nil {
		in, out := &in.SnapshotSource, &out.SnapshotSource
		*out = new(string)
		**out = **in
	}
	if in.SnapshotStatus != nil {
		in, out := &in.SnapshotStatus, &out.SnapshotStatus
		*out = new(string)
		**out = **in
	}
	if in.SnapshotWindow != nil {
		in, out := &in.SnapshotWindow, &out.SnapshotWindow
		*out = new(string)
		**out = **in
	}
	if in.TopicARN != nil {
		in, out := &in.TopicARN, &out.TopicARN
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotStatus.
func (in *SnapshotStatus) DeepCopy() *SnapshotStatus {
	if in == nil {
		return nil
	}
	out := new(SnapshotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Snapshot_SDK) DeepCopyInto(out *Snapshot_SDK) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.AutoMinorVersionUpgrade != nil {
		in, out := &in.AutoMinorVersionUpgrade, &out.AutoMinorVersionUpgrade
		*out = new(bool)
		**out = **in
	}
	if in.AutomaticFailover != nil {
		in, out := &in.AutomaticFailover, &out.AutomaticFailover
		*out = new(string)
		**out = **in
	}
	if in.CacheClusterCreateTime != nil {
		in, out := &in.CacheClusterCreateTime, &out.CacheClusterCreateTime
		*out = (*in).DeepCopy()
	}
	if in.CacheClusterID != nil {
		in, out := &in.CacheClusterID, &out.CacheClusterID
		*out = new(string)
		**out = **in
	}
	if in.CacheNodeType != nil {
		in, out := &in.CacheNodeType, &out.CacheNodeType
		*out = new(string)
		**out = **in
	}
	if in.CacheParameterGroupName != nil {
		in, out := &in.CacheParameterGroupName, &out.CacheParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.CacheSubnetGroupName != nil {
		in, out := &in.CacheSubnetGroupName, &out.CacheSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.NodeSnapshots != nil {
		in, out := &in.NodeSnapshots, &out.NodeSnapshots
		*out = make([]*NodeSnapshot, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NodeSnapshot)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NumCacheNodes != nil {
		in, out := &in.NumCacheNodes, &out.NumCacheNodes
		*out = new(int64)
		**out = **in
	}
	if in.NumNodeGroups != nil {
		in, out := &in.NumNodeGroups, &out.NumNodeGroups
		*out = new(int64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.PreferredAvailabilityZone != nil {
		in, out := &in.PreferredAvailabilityZone, &out.PreferredAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.PreferredMaintenanceWindow != nil {
		in, out := &in.PreferredMaintenanceWindow, &out.PreferredMaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupDescription != nil {
		in, out := &in.ReplicationGroupDescription, &out.ReplicationGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotName != nil {
		in, out := &in.SnapshotName, &out.SnapshotName
		*out = new(string)
		**out = **in
	}
	if in.SnapshotRetentionLimit != nil {
		in, out := &in.SnapshotRetentionLimit, &out.SnapshotRetentionLimit
		*out = new(int64)
		**out = **in
	}
	if in.SnapshotSource != nil {
		in, out := &in.SnapshotSource, &out.SnapshotSource
		*out = new(string)
		**out = **in
	}
	if in.SnapshotStatus != nil {
		in, out := &in.SnapshotStatus, &out.SnapshotStatus
		*out = new(string)
		**out = **in
	}
	if in.SnapshotWindow != nil {
		in, out := &in.SnapshotWindow, &out.SnapshotWindow
		*out = new(string)
		**out = **in
	}
	if in.TopicARN != nil {
		in, out := &in.TopicARN, &out.TopicARN
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Snapshot_SDK.
func (in *Snapshot_SDK) DeepCopy() *Snapshot_SDK {
	if in == nil {
		return nil
	}
	out := new(Snapshot_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet) DeepCopyInto(out *Subnet) {
	*out = *in
	if in.SubnetAvailabilityZone != nil {
		in, out := &in.SubnetAvailabilityZone, &out.SubnetAvailabilityZone
		*out = new(AvailabilityZone)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIdentifier != nil {
		in, out := &in.SubnetIdentifier, &out.SubnetIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet.
func (in *Subnet) DeepCopy() *Subnet {
	if in == nil {
		return nil
	}
	out := new(Subnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeRangeFilter) DeepCopyInto(out *TimeRangeFilter) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeRangeFilter.
func (in *TimeRangeFilter) DeepCopy() *TimeRangeFilter {
	if in == nil {
		return nil
	}
	out := new(TimeRangeFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnprocessedUpdateAction) DeepCopyInto(out *UnprocessedUpdateAction) {
	*out = *in
	if in.CacheClusterID != nil {
		in, out := &in.CacheClusterID, &out.CacheClusterID
		*out = new(string)
		**out = **in
	}
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
	if in.ErrorType != nil {
		in, out := &in.ErrorType, &out.ErrorType
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ServiceUpdateName != nil {
		in, out := &in.ServiceUpdateName, &out.ServiceUpdateName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnprocessedUpdateAction.
func (in *UnprocessedUpdateAction) DeepCopy() *UnprocessedUpdateAction {
	if in == nil {
		return nil
	}
	out := new(UnprocessedUpdateAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateAction) DeepCopyInto(out *UpdateAction) {
	*out = *in
	if in.CacheClusterID != nil {
		in, out := &in.CacheClusterID, &out.CacheClusterID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EstimatedUpdateTime != nil {
		in, out := &in.EstimatedUpdateTime, &out.EstimatedUpdateTime
		*out = new(string)
		**out = **in
	}
	if in.NodesUpdated != nil {
		in, out := &in.NodesUpdated, &out.NodesUpdated
		*out = new(string)
		**out = **in
	}
	if in.ReplicationGroupID != nil {
		in, out := &in.ReplicationGroupID, &out.ReplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ServiceUpdateName != nil {
		in, out := &in.ServiceUpdateName, &out.ServiceUpdateName
		*out = new(string)
		**out = **in
	}
	if in.ServiceUpdateRecommendedApplyByDate != nil {
		in, out := &in.ServiceUpdateRecommendedApplyByDate, &out.ServiceUpdateRecommendedApplyByDate
		*out = (*in).DeepCopy()
	}
	if in.ServiceUpdateReleaseDate != nil {
		in, out := &in.ServiceUpdateReleaseDate, &out.ServiceUpdateReleaseDate
		*out = (*in).DeepCopy()
	}
	if in.UpdateActionAvailableDate != nil {
		in, out := &in.UpdateActionAvailableDate, &out.UpdateActionAvailableDate
		*out = (*in).DeepCopy()
	}
	if in.UpdateActionStatusModifiedDate != nil {
		in, out := &in.UpdateActionStatusModifiedDate, &out.UpdateActionStatusModifiedDate
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateAction.
func (in *UpdateAction) DeepCopy() *UpdateAction {
	if in == nil {
		return nil
	}
	out := new(UpdateAction)
	in.DeepCopyInto(out)
	return out
}
