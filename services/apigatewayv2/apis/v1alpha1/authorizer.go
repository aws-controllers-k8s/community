// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws/aws-controllers-k8s/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// AuthorizerSpec defines the desired state of Authorizer
type AuthorizerSpec struct {
	APIID                        *string           `json:"apiID,omitempty"`
	AuthorizerCredentialsARN     *string           `json:"authorizerCredentialsARN,omitempty"`
	AuthorizerResultTtlInSeconds *int64            `json:"authorizerResultTtlInSeconds,omitempty"`
	AuthorizerType               *string           `json:"authorizerType,omitempty"`
	AuthorizerURI                *string           `json:"authorizerURI,omitempty"`
	IDentitySource               []*string         `json:"identitySource,omitempty"`
	IDentityValidationExpression *string           `json:"identityValidationExpression,omitempty"`
	JWTConfiguration             *JWTConfiguration `json:"jwtConfiguration,omitempty"`
	Name                         *string           `json:"name,omitempty"`
}

// AuthorizerStatus defines the observed state of Authorizer
type AuthorizerStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	Conditions   []*ackv1alpha1.Condition `json:"conditions"`
	AuthorizerID *string                  `json:"authorizerID,omitempty"`
}

// Authorizer is the Schema for the Authorizers API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type Authorizer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AuthorizerSpec   `json:"spec,omitempty"`
	Status            AuthorizerStatus `json:"status,omitempty"`
}

// AuthorizerList contains a list of Authorizer
// +kubebuilder:object:root=true
type AuthorizerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Authorizer `json:"items"`
}

func init() {
	SchemeBuilder.Register(&Authorizer{}, &AuthorizerList{})
}
