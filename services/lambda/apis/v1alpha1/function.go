// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws/aws-controllers-k8s/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// FunctionSpec defines the desired state of Function
type FunctionSpec struct {
	 // +kubebuilder:validation:Required
	Code *FunctionCode `json:"code"`
	 DeadLetterConfig *DeadLetterConfig `json:"deadLetterConfig,omitempty"` 
	 Description *string `json:"description,omitempty"` 
	 Environment *Environment `json:"environment,omitempty"` 
	 FileSystemConfigs []*FileSystemConfig `json:"fileSystemConfigs,omitempty"` 
	 // +kubebuilder:validation:Required
	FunctionName *string `json:"functionName"`
	 // +kubebuilder:validation:Required
	Handler *string `json:"handler"`
	 KMSKeyARN *string `json:"kmsKeyARN,omitempty"` 
	 Layers []*string `json:"layers,omitempty"` 
	 MemorySize *int64 `json:"memorySize,omitempty"` 
	 Publish *bool `json:"publish,omitempty"` 
	 // +kubebuilder:validation:Required
	Role *string `json:"role"`
	 // +kubebuilder:validation:Required
	Runtime *string `json:"runtime"`
	 Tags map[string]*string `json:"tags,omitempty"` 
	 Timeout *int64 `json:"timeout,omitempty"` 
	 TracingConfig *TracingConfig `json:"tracingConfig,omitempty"` 
	 VPCConfig *VPCConfig `json:"vpcConfig,omitempty"` 
}

// FunctionStatus defines the observed state of Function
type FunctionStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	CodeSha256 *string `json:"codeSha256,omitempty"`
	CodeSize *int64 `json:"codeSize,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	LastUpdateStatus *string `json:"lastUpdateStatus,omitempty"`
	LastUpdateStatusReason *string `json:"lastUpdateStatusReason,omitempty"`
	LastUpdateStatusReasonCode *string `json:"lastUpdateStatusReasonCode,omitempty"`
	MasterARN *string `json:"masterARN,omitempty"`
	RevisionID *string `json:"revisionID,omitempty"`
	State *string `json:"state,omitempty"`
	StateReason *string `json:"stateReason,omitempty"`
	StateReasonCode *string `json:"stateReasonCode,omitempty"`
	Version *string `json:"version,omitempty"`
}

// Function is the Schema for the Functions API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type Function struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec   FunctionSpec   `json:"spec,omitempty"`
	Status FunctionStatus `json:"status,omitempty"`
}

// FunctionList contains a list of Function
// +kubebuilder:object:root=true
type FunctionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items []Function `json:"items"`
}

func init() {
	SchemeBuilder.Register(&Function{}, &FunctionList{})
}
